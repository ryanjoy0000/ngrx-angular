{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, mergeMap, of } from 'rxjs';\nimport * as PostActions from './actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../services/posts.service\";\nexport class PostsEffects {\n  constructor(actions$, postsService) {\n    this.actions$ = actions$;\n    this.postsService = postsService;\n    this.getPosts$ = createEffect(() => this.actions$.pipe(ofType(PostActions.getPosts), mergeMap(() => {\n      return this.postsService.getPosts().pipe(map(posts => PostActions.getPostsSuccess({\n        posts\n      })), catchError(err => of(PostActions.getPostsFailure({\n        error: err.message\n      }))));\n    })));\n  }\n}\nPostsEffects.ɵfac = function PostsEffects_Factory(t) {\n  return new (t || PostsEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.PostsService));\n};\nPostsEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PostsEffects,\n  factory: PostsEffects.ɵfac\n});","map":{"version":3,"mappings":"AACA,SAAkBA,YAAY,EAAEC,MAAM,QAAQ,eAAe;AAC7D,SAASC,UAAU,EAAEC,GAAG,EAAEC,QAAQ,EAAEC,EAAE,QAAQ,MAAM;AAEpD,OAAO,KAAKC,WAAW,MAAM,WAAW;;;;AAGxC,OAAM,MAAOC,YAAY;EAevBC,YAAoBC,QAAiB,EAAUC,YAA0B;IAArD,aAAQ,GAARD,QAAQ;IAAmB,iBAAY,GAAZC,YAAY;IAd3D,cAAS,GAAGV,YAAY,CAAC,MACvB,IAAI,CAACS,QAAQ,CAACE,IAAI,CAChBV,MAAM,CAACK,WAAW,CAACM,QAAQ,CAAC,EAC5BR,QAAQ,CAAC,MAAK;MACZ,OAAO,IAAI,CAACM,YAAY,CACrBE,QAAQ,EAAE,CACVD,IAAI,CACHR,GAAG,CAAEU,KAAK,IAAKP,WAAW,CAACQ,eAAe,CAAC;QAAED;MAAK,CAAE,CAAC,CAAC,EACtDX,UAAU,CAACa,GAAG,IAAIV,EAAE,CAACC,WAAW,CAACU,eAAe,CAAC;QAACC,KAAK,EAAEF,GAAG,CAACG;MAAO,CAAC,CAAC,CAAC,CAAC,CACzE;IACL,CAAC,CAAC,CACH,CACF;EAE2E;;AAfjEX,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAY,SAAZZ,YAAY;AAAA","names":["createEffect","ofType","catchError","map","mergeMap","of","PostActions","PostsEffects","constructor","actions$","postsService","pipe","getPosts","posts","getPostsSuccess","err","getPostsFailure","error","message","factory"],"sourceRoot":"","sources":["/Users/ryan/Workspace/codebase/angular/test1/src/app/posts/store/effects.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, mergeMap, of } from 'rxjs';\nimport { PostsService } from '../services/posts.service';\nimport * as PostActions from './actions';\n\n@Injectable()\nexport class PostsEffects {\n  getPosts$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(PostActions.getPosts),\n      mergeMap(() => {\n        return this.postsService\n          .getPosts()\n          .pipe(\n            map((posts) => PostActions.getPostsSuccess({ posts })),\n            catchError(err => of(PostActions.getPostsFailure({error: err.message})))          \n          );\n      })\n    )\n  );\n\n  constructor(private actions$: Actions, private postsService: PostsService) {}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}