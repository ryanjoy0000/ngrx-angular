{"ast":null,"code":"import { select } from '@ngrx/store';\nimport * as PostActions from '../../store/actions';\nimport { errorSelector, isLoadingSelector, postsSelector } from '../../store/selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nfunction PostsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostsComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostsComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class PostsComponent {\n  constructor(store) {\n    this.store = store;\n    this.isLoading$ = this.store.pipe(select(isLoadingSelector));\n    this.error$ = this.store.pipe(select(errorSelector));\n    this.posts$ = this.store.pipe(select(postsSelector));\n  }\n  ngOnInit() {\n    this.store.dispatch(PostActions.getPosts());\n  }\n}\nPostsComponent.ɵfac = function PostsComponent_Factory(t) {\n  return new (t || PostsComponent)(i0.ɵɵdirectiveInject(i1.Store));\n};\nPostsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostsComponent,\n  selectors: [[\"app-posts\"]],\n  decls: 8,\n  vars: 9,\n  consts: [[4, \"ngIf\"]],\n  template: function PostsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Posts\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, PostsComponent_div_2_Template, 2, 0, \"div\", 0);\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵtemplate(4, PostsComponent_div_4_Template, 2, 0, \"div\", 0);\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵtemplate(6, PostsComponent_div_6_Template, 2, 0, \"div\", 0);\n      i0.ɵɵpipe(7, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 3, ctx.isLoading$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(5, 5, ctx.isLoading$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(7, 7, ctx.isLoading$));\n    }\n  },\n  dependencies: [i2.NgIf, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,MAAM,QAAe,aAAa;AAG3C,OAAO,KAAKC,WAAW,MAAM,qBAAqB;AAClD,SAASC,aAAa,EAAEC,iBAAiB,EAAEC,aAAa,QAAQ,uBAAuB;;;;;;ICHvFC,2BAAgC;IAAAA,0BAAU;IAAAA,iBAAM;;;;;IAChDA,2BAAgC;IAAAA,0BAAU;IAAAA,iBAAM;;;;;IAChDA,2BAAgC;IAAAA,0BAAU;IAAAA,iBAAM;;;ADShD,OAAM,MAAOC,cAAc;EAMzBC,YAAoBC,KAA+B;IAA/B,UAAK,GAALA,KAAK;IACvB,IAAI,CAACC,UAAU,GAAG,IAAI,CAACD,KAAK,CAACE,IAAI,CAACV,MAAM,CAACG,iBAAiB,CAAC,CAAC;IAC5D,IAAI,CAACQ,MAAM,GAAG,IAAI,CAACH,KAAK,CAACE,IAAI,CAACV,MAAM,CAACE,aAAa,CAAC,CAAC;IACpD,IAAI,CAACU,MAAM,GAAG,IAAI,CAACJ,KAAK,CAACE,IAAI,CAACV,MAAM,CAACI,aAAa,CAAC,CAAC;EACtD;EAEAS,QAAQ;IACN,IAAI,CAACL,KAAK,CAACM,QAAQ,CAACb,WAAW,CAACc,QAAQ,EAAE,CAAC;EAC7C;;AAdWT,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCb3Bf,0BAAI;MAAAA,qBAAK;MAAAA,iBAAK;MAEdA,+DAAgD;;MAChDA,+DAAgD;;MAChDA,+DAAgD;;;;MAF1CA,eAAwB;MAAxBA,2DAAwB;MACxBA,eAAwB;MAAxBA,2DAAwB;MACxBA,eAAwB;MAAxBA,2DAAwB","names":["select","PostActions","errorSelector","isLoadingSelector","postsSelector","i0","PostsComponent","constructor","store","isLoading$","pipe","error$","posts$","ngOnInit","dispatch","getPosts","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/ryan/Workspace/codebase/angular/test1/src/app/posts/components/posts/posts.component.ts","/Users/ryan/Workspace/codebase/angular/test1/src/app/posts/components/posts/posts.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppStateInterface } from 'src/app/types/appState.interface';\nimport * as PostActions from '../../store/actions'\nimport { errorSelector, isLoadingSelector, postsSelector } from '../../store/selectors';\nimport { PostInterface } from '../../types/post.interface';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.scss']\n})\nexport class PostsComponent implements OnInit {\n  \n  isLoading$: Observable<boolean>;\n  error$: Observable<string | null>;\n  posts$: Observable<PostInterface[]>\n  \n  constructor(private store: Store<AppStateInterface>){\n    this.isLoading$ = this.store.pipe(select(isLoadingSelector));\n    this.error$ = this.store.pipe(select(errorSelector));\n    this.posts$ = this.store.pipe(select(postsSelector));\n  }\n\n  ngOnInit(){\n    this.store.dispatch(PostActions.getPosts());\n  }\n\n}\n","<h1>Posts</h1>\n\n<div *ngIf=\"isLoading$ | async\">loading...</div>\n<div *ngIf=\"isLoading$ | async\">loading...</div>\n<div *ngIf=\"isLoading$ | async\">loading...</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}